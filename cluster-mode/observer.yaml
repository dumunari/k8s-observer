apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-observer
  labels:
    service: k8s-observer
spec:
  replicas: 1
  selector:
    matchLabels:
      service: k8s-observer
  template:
    metadata:
      labels:
        service: k8s-observer
    spec:
      serviceAccountName: k8s-observer
      containers:
        - name: k8s-observer
          image: docker.io/emunari/k8s-observer:latest
          ports:
            - containerPort: 5000
          env:
            - name: IN_CLUSTER
              value: "true"
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 5000
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-observer
spec:
  selector:
    service: k8s-observer
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: LoadBalancer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-observer
rules:
- apiGroups:
  - "apps"
  resources:
  - deployments
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-observer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-observer
subjects:
- kind: ServiceAccount
  name: k8s-observer
  namespace: default
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-observer
  namespace: default


